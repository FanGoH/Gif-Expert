{"version":3,"sources":["Components/AddCategoryForm.js","Components/ImageCard.js","Functions/getGifs.js","Components/CategoryGrid.js","Functions/customHooks/useFetchGifs.js","GifExpert.js","index.js"],"names":["AddCategoryForm","onSubmision","useState","inputValue","setInputValue","onSubmit","e","preventDefault","type","value","onChange","target","ImageCard","id","title","url","className","key","src","alt","getGifs","categoryName","a","encodeURI","fetch","response","json","data","map","img","images","downsized_medium","gifs","CategoryGrid","loading","state","setState","useEffect","then","useFetchGifs","image","GifExpert","categories","setCategories","newCategory","category","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mMAGaA,EAAkB,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,YAAiB,EAEVC,mBAAS,gBAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAgB9C,OACI,0BAAMC,SATW,SAACC,GAClBA,EAAEC,iBACgB,KAAfJ,GAGHF,EAAYE,KAKR,2BACIK,KAAK,OACLC,MAAON,EACPO,SAjBS,SAACJ,GAClBF,EAAcE,EAAEK,OAAOF,YCLlBG,EAAY,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,GAAIC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IAElC,OACI,yBAAKC,UAAU,8CAA8CC,IAAKJ,GAC9D,yBAAKK,IAAKH,EAAKI,IAAKL,IACpB,+BAAKA,EAAL,O,uBCRCM,EAAO,uCAAI,WAAMC,GAAN,uBAAAC,EAAA,6DACdP,EADc,iDACmCQ,UAAUF,GAD7C,+DAGGG,MAAMT,GAHT,cAGdU,EAHc,gBAICA,EAASC,OAJV,uBAIbC,EAJa,EAIbA,KAJa,UAMDA,EAAKC,KAAI,SAAAC,GAAQ,IAAD,EACf,MAAO,CAAChB,GAAIgB,EAAIhB,GAAIC,MAAOe,EAAIf,MAAOC,IAAG,UAAEc,EAAIC,cAAN,aAAE,EAAYC,iBAAiBhB,QAPxE,eAMdiB,EANc,yBASbA,GATa,4CAAJ,sDCMPC,EAAe,SAAC,GAAoB,IAAnBZ,EAAkB,EAAlBA,aAAkB,ECHpB,SAACA,GAAkB,IAAD,EAChBnB,mBAAS,CAC/ByB,KAAM,GACNO,SAAS,IAH6B,mBACnCC,EADmC,KAC5BC,EAD4B,KAgB1C,OATAC,qBAAU,WACNjB,EAAQC,GAAciB,MAAK,SAACX,GACpBS,EAAS,CACLT,KAAMA,EACNO,SAAS,SAGtB,CAACb,IAEGc,EDXiBI,CAAalB,GAA9BM,EAFqC,EAErCA,KAAMO,EAF+B,EAE/BA,QAEb,OACI,oCACI,gCAAMb,EAAN,KAEEa,EAAU,iBACR,yBAAKlB,UAAU,WACNW,EAAKC,KAAI,SAACY,GACP,OAAQ,kBAAC,EAAD,eACIvB,IAAKuB,EAAM3B,IACN2B,UEfhCC,EAAY,WAAO,IAAD,EAESvC,mBAAS,CAAC,cAFnB,mBAEpBwC,EAFoB,KAERC,EAFQ,KAQ3B,OACI,oCACI,4CACA,kBAAC,EAAD,CAAiB1C,YAPL,SAAC2C,GACjBD,EAAc,CAACC,GAAF,mBAAkBF,QAO3B,6BAEEA,EAAWd,KAAI,SAAAiB,GAAQ,OACrB,kBAAC,EAAD,CAAcxB,aAAcwB,EAAU5B,IAAK4B,S,MCZ3DC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.30d39a1e.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const AddCategoryForm = ({onSubmision}) => {\r\n    \r\n    const [inputValue, setInputValue] = useState(\"Add Category\");\r\n\r\n    const handleChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(inputValue === \"\")\r\n            return;\r\n\r\n        onSubmision(inputValue);\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={ handleChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategoryForm.propTypes = {\r\n    onSubmision: PropTypes.func.isRequired\r\n}","import React from 'react'\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const ImageCard = ({id, title, url}) => {\r\n\r\n    return (\r\n        <div className=\"imageCard animate__animated animate__fadeIn\" key={id}> \r\n            <img src={url} alt={title}/>\r\n            <p> {title} </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nImageCard.propTypes = {\r\n    id: PropTypes.string,\r\n    title: PropTypes.string,\r\n    url: PropTypes.string\r\n}\r\n","export const getGifs =  async(categoryName) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(categoryName)}&limit=10&api_key=qwBAwoFNicsvkSr7PqZK30to28LVRQwA`;\r\n\r\n    const response = await fetch(url);\r\n    const {data} = await response.json();\r\n\r\n    const gifs = await data.map(img => {\r\n                        return {id: img.id, title: img.title, url: img.images?.downsized_medium.url}});\r\n\r\n    return gifs;\r\n    \r\n}","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport { ImageCard } from './ImageCard';\r\nimport { useFetchGifs } from '../Functions/customHooks/useFetchGifs';\r\n\r\n\r\nexport const CategoryGrid = ({categoryName}) => {\r\n\r\n    const {data, loading} = useFetchGifs(categoryName);\r\n\r\n    return (\r\n        <>\r\n            <h4> {categoryName} </h4>\r\n\r\n            { loading ? \"Loading . . . \" : (\r\n                <div className=\"gifGrid\">\r\n                        {data.map((image) => {\r\n                            return (<ImageCard \r\n                                        key={image.id} \r\n                                        { ...image } />)\r\n                        })}\r\n                </div>\r\n            )}\r\n        </>    \r\n    )\r\n}\r\n\r\nCategoryGrid.propTypes = {\r\n    categoryName: PropTypes.string.isRequired\r\n}","import { useState, useEffect } from 'react';\r\nimport { getGifs } from '../getGifs';\r\n\r\nexport const useFetchGifs = (categoryName) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true,\r\n    });\r\n\r\n    \r\n    useEffect(() => {\r\n        getGifs(categoryName).then((data) => {\r\n                setState({\r\n                    data: data,\r\n                    loading: false\r\n                });\r\n            } )\r\n    }, [categoryName])\r\n\r\n    return state;\r\n\r\n}","import React, { useState } from 'react'\r\nimport { AddCategoryForm } from './Components/AddCategoryForm';\r\nimport { CategoryGrid } from './Components/CategoryGrid';\r\n\r\nexport const GifExpert = () => {\r\n\r\n    const [categories, setCategories] = useState([\"One Punch\"]);\r\n\r\n    const addCategory = (newCategory) => {\r\n        setCategories([newCategory, ...categories]);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h2> Gif Expert </h2>\r\n            <AddCategoryForm onSubmision={addCategory}/>\r\n            <hr />  \r\n\r\n            { categories.map(category => (\r\n                <CategoryGrid categoryName={category} key={category} />\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {GifExpert} from \"./GifExpert\";\n\nimport './index.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <GifExpert />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}